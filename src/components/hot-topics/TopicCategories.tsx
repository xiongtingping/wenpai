/**
 * ËØùÈ¢òÂàÜÁ±ªÁªÑ‰ª∂
 * ÊîØÊåÅÊåâÁ±ªÂà´Âø´ÈÄüÊü•ÁúãËØùÈ¢ò
 */
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { DailyHotItem } from '@/api/hotTopicsService';

interface TopicCategoriesProps {
  topics: DailyHotItem[];
  onCategoryChange: (category: string) => void;
  onTopicClick: (topic: DailyHotItem) => void;
}

/**
 * ËØùÈ¢òÂàÜÁ±ªÁªÑ‰ª∂
 */
const TopicCategories: React.FC<TopicCategoriesProps> = ({
  topics,
  onCategoryChange,
  onTopicClick
}) => {
  const [activeCategory, setActiveCategory] = useState('all');

  // ËØùÈ¢òÂàÜÁ±ªÂÆö‰πâ
  const categories = [
    { id: 'all', label: 'ÂÖ®ÈÉ®', icon: 'üî•' },
    { id: 'entertainment', label: 'Â®±‰πê', icon: 'üé¨' },
    { id: 'technology', label: 'ÁßëÊäÄ', icon: 'üíª' },
    { id: 'sports', label: '‰ΩìËÇ≤', icon: '‚öΩ' },
    { id: 'politics', label: 'ÊîøÊ≤ª', icon: 'üèõÔ∏è' },
    { id: 'economy', label: 'Ë¥¢Áªè', icon: 'üí∞' },
    { id: 'society', label: 'Á§æ‰ºö', icon: 'üë•' },
    { id: 'education', label: 'ÊïôËÇ≤', icon: 'üìö' },
    { id: 'health', label: 'ÂÅ•Â∫∑', icon: 'üè•' },
    { id: 'lifestyle', label: 'ÁîüÊ¥ª', icon: 'üè†' }
  ];

  /**
   * Ê†πÊçÆÂÖ≥ÈîÆËØçÂà§Êñ≠ËØùÈ¢òÂàÜÁ±ª
   */
  const getTopicCategory = (topic: DailyHotItem): string => {
    const title = topic.title.toLowerCase();
    const desc = (topic.desc || '').toLowerCase();

    // Â®±‰πêÁ±ªÂÖ≥ÈîÆËØç
    const entertainmentKeywords = ['ÊòéÊòü', 'ÊºîÂëò', 'Ê≠åÊâã', 'ÁîµÂΩ±', 'ÁîµËßÜÂâß', 'ÁªºËâ∫', 'Â®±‰πê', 'ÊòéÊòü', 'Ëâ∫‰∫∫', 'ÂØºÊºî', 'ÁºñÂâß'];
    if (entertainmentKeywords.some(keyword => title.includes(keyword) || desc.includes(keyword))) {
      return 'entertainment';
    }

    // ÁßëÊäÄÁ±ªÂÖ≥ÈîÆËØç
    const technologyKeywords = ['ÁßëÊäÄ', 'ÊäÄÊúØ', '‰∫íËÅîÁΩë', 'AI', '‰∫∫Â∑•Êô∫ËÉΩ', 'ÊâãÊú∫', 'ÁîµËÑë', 'ËΩØ‰ª∂', 'ÁºñÁ®ã', 'ÁÆóÊ≥ï', 'ËäØÁâá'];
    if (technologyKeywords.some(keyword => title.includes(keyword) || desc.includes(keyword))) {
      return 'technology';
    }

    // ‰ΩìËÇ≤Á±ªÂÖ≥ÈîÆËØç
    const sportsKeywords = ['Ë∂≥ÁêÉ', 'ÁØÆÁêÉ', '‰ΩìËÇ≤', 'ÊØîËµõ', 'ËøêÂä®Âëò', 'ÊïôÁªÉ', 'ÁêÉÈòü', 'ËÅîËµõ', 'ÂÜ†ÂÜõ', 'Â••Ëøê‰ºö'];
    if (sportsKeywords.some(keyword => title.includes(keyword) || desc.includes(keyword))) {
      return 'sports';
    }

    // ÊîøÊ≤ªÁ±ªÂÖ≥ÈîÆËØç
    const politicsKeywords = ['ÊîøÂ∫ú', 'ÊîøÁ≠ñ', 'ÊîøÊ≤ª', 'ÂÆòÂëò', 'ÈÄâ‰∏æ', 'Ê≥ïÂæã', 'Ê≥ïËßÑ', 'ÂõΩÂÆ∂', 'È¢ÜÂØº‰∫∫', '‰ºöËÆÆ'];
    if (politicsKeywords.some(keyword => title.includes(keyword) || desc.includes(keyword))) {
      return 'politics';
    }

    // Ë¥¢ÁªèÁ±ªÂÖ≥ÈîÆËØç
    const economyKeywords = ['ÁªèÊµé', 'ÈáëËûç', 'ËÇ°Á•®', 'Âü∫Èáë', 'ÊäïËµÑ', 'ÁêÜË¥¢', 'Èì∂Ë°å', '‰øùÈô©', 'ÊàøÂú∞‰∫ß', 'ËÇ°Â∏Ç'];
    if (economyKeywords.some(keyword => title.includes(keyword) || desc.includes(keyword))) {
      return 'economy';
    }

    // Á§æ‰ºöÁ±ªÂÖ≥ÈîÆËØç
    const societyKeywords = ['Á§æ‰ºö', '‰∫ã‰ª∂', 'Êñ∞Èóª', 'Ë∞ÉÊü•', 'Êä•ÈÅì', '‰∫ã‰ª∂', '‰∫ãÊïÖ', 'Ê°à‰ª∂', 'Á∫†Á∫∑'];
    if (societyKeywords.some(keyword => title.includes(keyword) || desc.includes(keyword))) {
      return 'society';
    }

    // ÊïôËÇ≤Á±ªÂÖ≥ÈîÆËØç
    const educationKeywords = ['ÊïôËÇ≤', 'Â≠¶Ê†°', 'Â≠¶Áîü', 'ËÄÅÂ∏à', 'ËÄÉËØï', 'Â≠¶‰π†', 'ÂüπËÆ≠', 'ËØæÁ®ã', 'Â§ßÂ≠¶', 'È´òËÄÉ'];
    if (educationKeywords.some(keyword => title.includes(keyword) || desc.includes(keyword))) {
      return 'education';
    }

    // ÂÅ•Â∫∑Á±ªÂÖ≥ÈîÆËØç
    const healthKeywords = ['ÂÅ•Â∫∑', 'ÂåªÁñó', 'ÂåªÈô¢', 'ÂåªÁîü', 'ÁñæÁóÖ', 'Ê≤ªÁñó', 'ËçØÁâ©', 'Áñ´Ëãó', 'Áñ´ÊÉÖ', '‰øùÂÅ•'];
    if (healthKeywords.some(keyword => title.includes(keyword) || desc.includes(keyword))) {
      return 'health';
    }

    // ÁîüÊ¥ªÁ±ªÂÖ≥ÈîÆËØç
    const lifestyleKeywords = ['ÁîüÊ¥ª', 'ÁæéÈ£ü', 'ÊóÖÊ∏∏', 'Ë¥≠Áâ©', 'Êó∂Â∞ö', 'ÁæéÂÆπ', 'ÂÆ∂Â±Ö', 'Ë£Ö‰øÆ', 'ÂÆ†Áâ©', 'Âõ≠Ëâ∫'];
    if (lifestyleKeywords.some(keyword => title.includes(keyword) || desc.includes(keyword))) {
      return 'lifestyle';
    }

    return 'other';
  };

  /**
   * Ëé∑ÂèñÂàÜÁ±ª‰∏ãÁöÑËØùÈ¢ò
   */
  const getTopicsByCategory = (category: string): DailyHotItem[] => {
    if (category === 'all') {
      return topics;
    }
    return topics.filter(topic => getTopicCategory(topic) === category);
  };

  /**
   * Â§ÑÁêÜÂàÜÁ±ªÂàáÊç¢
   */
  const handleCategoryChange = (category: string) => {
    setActiveCategory(category);
    onCategoryChange(category);
  };

  /**
   * Ëé∑ÂèñÂàÜÁ±ªÁªüËÆ°
   */
  const getCategoryCount = (category: string): number => {
    return getTopicsByCategory(category).length;
  };

  return (
    <div className="mb-6">
      <Tabs value={activeCategory} onValueChange={handleCategoryChange}>
        <TabsList className="grid w-full grid-cols-5 lg:grid-cols-10">
          {categories.map((category) => (
            <TabsTrigger
              key={category.id}
              value={category.id}
              className="flex items-center gap-1 text-xs"
            >
              <span>{category.icon}</span>
              <span className="hidden sm:inline">{category.label}</span>
              <Badge variant="secondary" className="ml-1 text-xs">
                {getCategoryCount(category.id)}
              </Badge>
            </TabsTrigger>
          ))}
        </TabsList>

        {categories.map((category) => (
          <TabsContent key={category.id} value={category.id}>
            <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
              {getTopicsByCategory(category.id).map((topic, index) => (
                <Card
                  key={`${topic.platform}-${index}`}
                  className="cursor-pointer hover:shadow-md transition-shadow"
                  onClick={() => onTopicClick(topic)}
                >
                  <CardContent className="p-4">
                    <div className="flex items-start justify-between mb-2">
                      <Badge variant="outline" className="text-xs">
                        {topic.platform}
                      </Badge>
                      <span className="text-xs text-gray-500">#{index + 1}</span>
                    </div>
                    <h3 className="font-medium text-sm line-clamp-2 mb-2">
                      {topic.title}
                    </h3>
                    {topic.desc && (
                      <p className="text-xs text-gray-600 line-clamp-2 mb-2">
                        {topic.desc}
                      </p>
                    )}
                    <div className="flex items-center justify-between">
                      <span className="text-xs text-gray-500">
                        ÁÉ≠Â∫¶: {topic.hot}
                      </span>
                      <Badge variant="secondary" className="text-xs">
                        {category.label}
                      </Badge>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
            
            {getTopicsByCategory(category.id).length === 0 && (
              <div className="text-center py-8 text-gray-500">
                ËØ•ÂàÜÁ±ª‰∏ãÊöÇÊó†ËØùÈ¢ò
              </div>
            )}
          </TabsContent>
        ))}
      </Tabs>
    </div>
  );
};

export default TopicCategories; 