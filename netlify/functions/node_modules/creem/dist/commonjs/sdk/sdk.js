"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Creem = void 0;
const activateLicense_js_1 = require("../funcs/activateLicense.js");
const cancelSubscription_js_1 = require("../funcs/cancelSubscription.js");
const createCheckout_js_1 = require("../funcs/createCheckout.js");
const createDiscount_js_1 = require("../funcs/createDiscount.js");
const createProduct_js_1 = require("../funcs/createProduct.js");
const deactivateLicense_js_1 = require("../funcs/deactivateLicense.js");
const deleteDiscount_js_1 = require("../funcs/deleteDiscount.js");
const generateCustomerLinks_js_1 = require("../funcs/generateCustomerLinks.js");
const retrieveCheckout_js_1 = require("../funcs/retrieveCheckout.js");
const retrieveCustomer_js_1 = require("../funcs/retrieveCustomer.js");
const retrieveDiscount_js_1 = require("../funcs/retrieveDiscount.js");
const retrieveProduct_js_1 = require("../funcs/retrieveProduct.js");
const retrieveSubscription_js_1 = require("../funcs/retrieveSubscription.js");
const searchProducts_js_1 = require("../funcs/searchProducts.js");
const searchTransactions_js_1 = require("../funcs/searchTransactions.js");
const updateSubscription_js_1 = require("../funcs/updateSubscription.js");
const upgradeSubscription_js_1 = require("../funcs/upgradeSubscription.js");
const validateLicense_js_1 = require("../funcs/validateLicense.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class Creem extends sdks_js_1.ClientSDK {
    /**
     * Retrieve a product
     */
    async retrieveProduct(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, retrieveProduct_js_1.retrieveProduct)(this, request, options));
    }
    /**
     * Creates a new product.
     */
    async createProduct(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, createProduct_js_1.createProduct)(this, request, options));
    }
    /**
     * List all products
     */
    async searchProducts(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, searchProducts_js_1.searchProducts)(this, request, options));
    }
    /**
     * Retrieve a customer
     */
    async retrieveCustomer(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, retrieveCustomer_js_1.retrieveCustomer)(this, request, options));
    }
    /**
     * Generate Customer Links
     */
    async generateCustomerLinks(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, generateCustomerLinks_js_1.generateCustomerLinks)(this, request, options));
    }
    /**
     * Retrieve a subscription
     */
    async retrieveSubscription(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, retrieveSubscription_js_1.retrieveSubscription)(this, request, options));
    }
    /**
     * Cancel a subscription.
     */
    async cancelSubscription(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, cancelSubscription_js_1.cancelSubscription)(this, request, options));
    }
    /**
     * Update a subscription.
     */
    async updateSubscription(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, updateSubscription_js_1.updateSubscription)(this, request, options));
    }
    /**
     * Upgrade a subscription to a different product
     */
    async upgradeSubscription(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, upgradeSubscription_js_1.upgradeSubscription)(this, request, options));
    }
    /**
     * Retrieve a new checkout session.
     */
    async retrieveCheckout(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, retrieveCheckout_js_1.retrieveCheckout)(this, request, options));
    }
    /**
     * Creates a new checkout session.
     */
    async createCheckout(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, createCheckout_js_1.createCheckout)(this, request, options));
    }
    /**
     * Activates a license key.
     */
    async activateLicense(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, activateLicense_js_1.activateLicense)(this, request, options));
    }
    /**
     * Deactivate a license key instance.
     */
    async deactivateLicense(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, deactivateLicense_js_1.deactivateLicense)(this, request, options));
    }
    /**
     * Validates a license key or instance.
     */
    async validateLicense(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, validateLicense_js_1.validateLicense)(this, request, options));
    }
    /**
     * Retrieve discount
     */
    async retrieveDiscount(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, retrieveDiscount_js_1.retrieveDiscount)(this, request, options));
    }
    /**
     * Create a discount.
     */
    async createDiscount(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, createDiscount_js_1.createDiscount)(this, request, options));
    }
    /**
     * Delete a discount.
     */
    async deleteDiscount(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, deleteDiscount_js_1.deleteDiscount)(this, request, options));
    }
    /**
     * List all transactions
     */
    async searchTransactions(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, searchTransactions_js_1.searchTransactions)(this, request, options));
    }
}
exports.Creem = Creem;
//# sourceMappingURL=sdk.js.map