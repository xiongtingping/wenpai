"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckoutEntity$ = exports.CheckoutEntity$outboundSchema = exports.CheckoutEntity$inboundSchema = exports.CheckoutEntityCustomer$ = exports.CheckoutEntityCustomer$outboundSchema = exports.CheckoutEntityCustomer$inboundSchema = exports.Subscription$ = exports.Subscription$outboundSchema = exports.Subscription$inboundSchema = exports.CheckoutEntityProduct$ = exports.CheckoutEntityProduct$outboundSchema = exports.CheckoutEntityProduct$inboundSchema = exports.CheckoutEntityMode$ = exports.CheckoutEntityMode$outboundSchema = exports.CheckoutEntityMode$inboundSchema = exports.CheckoutEntityMode = void 0;
exports.checkoutEntityProductToJSON = checkoutEntityProductToJSON;
exports.checkoutEntityProductFromJSON = checkoutEntityProductFromJSON;
exports.subscriptionToJSON = subscriptionToJSON;
exports.subscriptionFromJSON = subscriptionFromJSON;
exports.checkoutEntityCustomerToJSON = checkoutEntityCustomerToJSON;
exports.checkoutEntityCustomerFromJSON = checkoutEntityCustomerFromJSON;
exports.checkoutEntityToJSON = checkoutEntityToJSON;
exports.checkoutEntityFromJSON = checkoutEntityFromJSON;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const schemas_js_1 = require("../../lib/schemas.js");
const customerentity_js_1 = require("./customerentity.js");
const customfield_js_1 = require("./customfield.js");
const orderentity_js_1 = require("./orderentity.js");
const productentity_js_1 = require("./productentity.js");
const productfeatureentity_js_1 = require("./productfeatureentity.js");
const subscriptionentity_js_1 = require("./subscriptionentity.js");
/**
 * String representing the environment.
 */
exports.CheckoutEntityMode = {
    Test: "test",
    Prod: "prod",
    Sandbox: "sandbox",
};
/** @internal */
exports.CheckoutEntityMode$inboundSchema = z.nativeEnum(exports.CheckoutEntityMode);
/** @internal */
exports.CheckoutEntityMode$outboundSchema = exports.CheckoutEntityMode$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutEntityMode$;
(function (CheckoutEntityMode$) {
    /** @deprecated use `CheckoutEntityMode$inboundSchema` instead. */
    CheckoutEntityMode$.inboundSchema = exports.CheckoutEntityMode$inboundSchema;
    /** @deprecated use `CheckoutEntityMode$outboundSchema` instead. */
    CheckoutEntityMode$.outboundSchema = exports.CheckoutEntityMode$outboundSchema;
})(CheckoutEntityMode$ || (exports.CheckoutEntityMode$ = CheckoutEntityMode$ = {}));
/** @internal */
exports.CheckoutEntityProduct$inboundSchema = z.union([productentity_js_1.ProductEntity$inboundSchema, z.string()]);
/** @internal */
exports.CheckoutEntityProduct$outboundSchema = z.union([productentity_js_1.ProductEntity$outboundSchema, z.string()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutEntityProduct$;
(function (CheckoutEntityProduct$) {
    /** @deprecated use `CheckoutEntityProduct$inboundSchema` instead. */
    CheckoutEntityProduct$.inboundSchema = exports.CheckoutEntityProduct$inboundSchema;
    /** @deprecated use `CheckoutEntityProduct$outboundSchema` instead. */
    CheckoutEntityProduct$.outboundSchema = exports.CheckoutEntityProduct$outboundSchema;
})(CheckoutEntityProduct$ || (exports.CheckoutEntityProduct$ = CheckoutEntityProduct$ = {}));
function checkoutEntityProductToJSON(checkoutEntityProduct) {
    return JSON.stringify(exports.CheckoutEntityProduct$outboundSchema.parse(checkoutEntityProduct));
}
function checkoutEntityProductFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutEntityProduct$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutEntityProduct' from JSON`);
}
/** @internal */
exports.Subscription$inboundSchema = z.union([subscriptionentity_js_1.SubscriptionEntity$inboundSchema, z.string()]);
/** @internal */
exports.Subscription$outboundSchema = z.union([subscriptionentity_js_1.SubscriptionEntity$outboundSchema, z.string()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Subscription$;
(function (Subscription$) {
    /** @deprecated use `Subscription$inboundSchema` instead. */
    Subscription$.inboundSchema = exports.Subscription$inboundSchema;
    /** @deprecated use `Subscription$outboundSchema` instead. */
    Subscription$.outboundSchema = exports.Subscription$outboundSchema;
})(Subscription$ || (exports.Subscription$ = Subscription$ = {}));
function subscriptionToJSON(subscription) {
    return JSON.stringify(exports.Subscription$outboundSchema.parse(subscription));
}
function subscriptionFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.Subscription$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Subscription' from JSON`);
}
/** @internal */
exports.CheckoutEntityCustomer$inboundSchema = z.union([customerentity_js_1.CustomerEntity$inboundSchema, z.string()]);
/** @internal */
exports.CheckoutEntityCustomer$outboundSchema = z.union([customerentity_js_1.CustomerEntity$outboundSchema, z.string()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutEntityCustomer$;
(function (CheckoutEntityCustomer$) {
    /** @deprecated use `CheckoutEntityCustomer$inboundSchema` instead. */
    CheckoutEntityCustomer$.inboundSchema = exports.CheckoutEntityCustomer$inboundSchema;
    /** @deprecated use `CheckoutEntityCustomer$outboundSchema` instead. */
    CheckoutEntityCustomer$.outboundSchema = exports.CheckoutEntityCustomer$outboundSchema;
})(CheckoutEntityCustomer$ || (exports.CheckoutEntityCustomer$ = CheckoutEntityCustomer$ = {}));
function checkoutEntityCustomerToJSON(checkoutEntityCustomer) {
    return JSON.stringify(exports.CheckoutEntityCustomer$outboundSchema.parse(checkoutEntityCustomer));
}
function checkoutEntityCustomerFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutEntityCustomer$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutEntityCustomer' from JSON`);
}
/** @internal */
exports.CheckoutEntity$inboundSchema = z.object({
    id: z.string(),
    mode: exports.CheckoutEntityMode$inboundSchema,
    object: z.string(),
    status: z.string(),
    request_id: z.string().optional(),
    product: z.union([productentity_js_1.ProductEntity$inboundSchema, z.string()]),
    units: z.number().default(1),
    order: orderentity_js_1.OrderEntity$inboundSchema.optional(),
    subscription: z.union([subscriptionentity_js_1.SubscriptionEntity$inboundSchema, z.string()])
        .optional(),
    customer: z.union([customerentity_js_1.CustomerEntity$inboundSchema, z.string()]).optional(),
    custom_fields: z.array(customfield_js_1.CustomField$inboundSchema).optional(),
    checkout_url: z.string().optional(),
    success_url: z.nullable(z.string()).optional(),
    feature: z.array(productfeatureentity_js_1.ProductFeatureEntity$inboundSchema).optional(),
    metadata: z.record(z.any()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "request_id": "requestId",
        "custom_fields": "customFields",
        "checkout_url": "checkoutUrl",
        "success_url": "successUrl",
    });
});
/** @internal */
exports.CheckoutEntity$outboundSchema = z.object({
    id: z.string(),
    mode: exports.CheckoutEntityMode$outboundSchema,
    object: z.string(),
    status: z.string(),
    requestId: z.string().optional(),
    product: z.union([productentity_js_1.ProductEntity$outboundSchema, z.string()]),
    units: z.number().default(1),
    order: orderentity_js_1.OrderEntity$outboundSchema.optional(),
    subscription: z.union([subscriptionentity_js_1.SubscriptionEntity$outboundSchema, z.string()])
        .optional(),
    customer: z.union([customerentity_js_1.CustomerEntity$outboundSchema, z.string()]).optional(),
    customFields: z.array(customfield_js_1.CustomField$outboundSchema).optional(),
    checkoutUrl: z.string().optional(),
    successUrl: z.nullable(z.string()).optional(),
    feature: z.array(productfeatureentity_js_1.ProductFeatureEntity$outboundSchema).optional(),
    metadata: z.record(z.any()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        requestId: "request_id",
        customFields: "custom_fields",
        checkoutUrl: "checkout_url",
        successUrl: "success_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var CheckoutEntity$;
(function (CheckoutEntity$) {
    /** @deprecated use `CheckoutEntity$inboundSchema` instead. */
    CheckoutEntity$.inboundSchema = exports.CheckoutEntity$inboundSchema;
    /** @deprecated use `CheckoutEntity$outboundSchema` instead. */
    CheckoutEntity$.outboundSchema = exports.CheckoutEntity$outboundSchema;
})(CheckoutEntity$ || (exports.CheckoutEntity$ = CheckoutEntity$ = {}));
function checkoutEntityToJSON(checkoutEntity) {
    return JSON.stringify(exports.CheckoutEntity$outboundSchema.parse(checkoutEntity));
}
function checkoutEntityFromJSON(jsonString) {
    return (0, schemas_js_1.safeParse)(jsonString, (x) => exports.CheckoutEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CheckoutEntity' from JSON`);
}
//# sourceMappingURL=checkoutentity.js.map