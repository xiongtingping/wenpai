/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RetrieveDiscountRequest$inboundSchema = z.object({
    discount_id: z.string().optional(),
    discount_code: z.string().optional(),
    "x-api-key": z.string(),
}).transform((v) => {
    return remap$(v, {
        "discount_id": "discountId",
        "discount_code": "discountCode",
        "x-api-key": "xApiKey",
    });
});
/** @internal */
export const RetrieveDiscountRequest$outboundSchema = z.object({
    discountId: z.string().optional(),
    discountCode: z.string().optional(),
    xApiKey: z.string(),
}).transform((v) => {
    return remap$(v, {
        discountId: "discount_id",
        discountCode: "discount_code",
        xApiKey: "x-api-key",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveDiscountRequest$;
(function (RetrieveDiscountRequest$) {
    /** @deprecated use `RetrieveDiscountRequest$inboundSchema` instead. */
    RetrieveDiscountRequest$.inboundSchema = RetrieveDiscountRequest$inboundSchema;
    /** @deprecated use `RetrieveDiscountRequest$outboundSchema` instead. */
    RetrieveDiscountRequest$.outboundSchema = RetrieveDiscountRequest$outboundSchema;
})(RetrieveDiscountRequest$ || (RetrieveDiscountRequest$ = {}));
export function retrieveDiscountRequestToJSON(retrieveDiscountRequest) {
    return JSON.stringify(RetrieveDiscountRequest$outboundSchema.parse(retrieveDiscountRequest));
}
export function retrieveDiscountRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RetrieveDiscountRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RetrieveDiscountRequest' from JSON`);
}
//# sourceMappingURL=retrievediscount.js.map