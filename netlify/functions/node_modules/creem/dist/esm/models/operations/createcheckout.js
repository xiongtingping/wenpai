/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateCheckoutRequest$inboundSchema = z.object({
    "x-api-key": z.string(),
    CreateCheckoutRequest: components.CreateCheckoutRequest$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "x-api-key": "xApiKey",
        "CreateCheckoutRequest": "createCheckoutRequest",
    });
});
/** @internal */
export const CreateCheckoutRequest$outboundSchema = z.object({
    xApiKey: z.string(),
    createCheckoutRequest: components.CreateCheckoutRequest$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        xApiKey: "x-api-key",
        createCheckoutRequest: "CreateCheckoutRequest",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateCheckoutRequest$;
(function (CreateCheckoutRequest$) {
    /** @deprecated use `CreateCheckoutRequest$inboundSchema` instead. */
    CreateCheckoutRequest$.inboundSchema = CreateCheckoutRequest$inboundSchema;
    /** @deprecated use `CreateCheckoutRequest$outboundSchema` instead. */
    CreateCheckoutRequest$.outboundSchema = CreateCheckoutRequest$outboundSchema;
})(CreateCheckoutRequest$ || (CreateCheckoutRequest$ = {}));
export function createCheckoutRequestToJSON(createCheckoutRequest) {
    return JSON.stringify(CreateCheckoutRequest$outboundSchema.parse(createCheckoutRequest));
}
export function createCheckoutRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateCheckoutRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateCheckoutRequest' from JSON`);
}
//# sourceMappingURL=createcheckout.js.map