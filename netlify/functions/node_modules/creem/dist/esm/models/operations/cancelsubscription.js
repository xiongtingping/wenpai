/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CancelSubscriptionRequest$inboundSchema = z.object({
    id: z.string(),
    "x-api-key": z.string(),
}).transform((v) => {
    return remap$(v, {
        "x-api-key": "xApiKey",
    });
});
/** @internal */
export const CancelSubscriptionRequest$outboundSchema = z.object({
    id: z.string(),
    xApiKey: z.string(),
}).transform((v) => {
    return remap$(v, {
        xApiKey: "x-api-key",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CancelSubscriptionRequest$;
(function (CancelSubscriptionRequest$) {
    /** @deprecated use `CancelSubscriptionRequest$inboundSchema` instead. */
    CancelSubscriptionRequest$.inboundSchema = CancelSubscriptionRequest$inboundSchema;
    /** @deprecated use `CancelSubscriptionRequest$outboundSchema` instead. */
    CancelSubscriptionRequest$.outboundSchema = CancelSubscriptionRequest$outboundSchema;
})(CancelSubscriptionRequest$ || (CancelSubscriptionRequest$ = {}));
export function cancelSubscriptionRequestToJSON(cancelSubscriptionRequest) {
    return JSON.stringify(CancelSubscriptionRequest$outboundSchema.parse(cancelSubscriptionRequest));
}
export function cancelSubscriptionRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CancelSubscriptionRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CancelSubscriptionRequest' from JSON`);
}
//# sourceMappingURL=cancelsubscription.js.map