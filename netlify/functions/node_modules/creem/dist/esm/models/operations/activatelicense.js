/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const ActivateLicenseRequest$inboundSchema = z.object({
    "x-api-key": z.string(),
    ActivateLicenseRequestEntity: components.ActivateLicenseRequestEntity$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "x-api-key": "xApiKey",
        "ActivateLicenseRequestEntity": "activateLicenseRequestEntity",
    });
});
/** @internal */
export const ActivateLicenseRequest$outboundSchema = z.object({
    xApiKey: z.string(),
    activateLicenseRequestEntity: components.ActivateLicenseRequestEntity$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        xApiKey: "x-api-key",
        activateLicenseRequestEntity: "ActivateLicenseRequestEntity",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ActivateLicenseRequest$;
(function (ActivateLicenseRequest$) {
    /** @deprecated use `ActivateLicenseRequest$inboundSchema` instead. */
    ActivateLicenseRequest$.inboundSchema = ActivateLicenseRequest$inboundSchema;
    /** @deprecated use `ActivateLicenseRequest$outboundSchema` instead. */
    ActivateLicenseRequest$.outboundSchema = ActivateLicenseRequest$outboundSchema;
})(ActivateLicenseRequest$ || (ActivateLicenseRequest$ = {}));
export function activateLicenseRequestToJSON(activateLicenseRequest) {
    return JSON.stringify(ActivateLicenseRequest$outboundSchema.parse(activateLicenseRequest));
}
export function activateLicenseRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ActivateLicenseRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ActivateLicenseRequest' from JSON`);
}
//# sourceMappingURL=activatelicense.js.map