/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CreateCustomerPortalLinkRequestEntity$inboundSchema = z.object({
    customer_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "customer_id": "customerId",
    });
});
/** @internal */
export const CreateCustomerPortalLinkRequestEntity$outboundSchema = z.object({
    customerId: z.string(),
}).transform((v) => {
    return remap$(v, {
        customerId: "customer_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateCustomerPortalLinkRequestEntity$;
(function (CreateCustomerPortalLinkRequestEntity$) {
    /** @deprecated use `CreateCustomerPortalLinkRequestEntity$inboundSchema` instead. */
    CreateCustomerPortalLinkRequestEntity$.inboundSchema = CreateCustomerPortalLinkRequestEntity$inboundSchema;
    /** @deprecated use `CreateCustomerPortalLinkRequestEntity$outboundSchema` instead. */
    CreateCustomerPortalLinkRequestEntity$.outboundSchema = CreateCustomerPortalLinkRequestEntity$outboundSchema;
})(CreateCustomerPortalLinkRequestEntity$ || (CreateCustomerPortalLinkRequestEntity$ = {}));
export function createCustomerPortalLinkRequestEntityToJSON(createCustomerPortalLinkRequestEntity) {
    return JSON.stringify(CreateCustomerPortalLinkRequestEntity$outboundSchema.parse(createCustomerPortalLinkRequestEntity));
}
export function createCustomerPortalLinkRequestEntityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateCustomerPortalLinkRequestEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateCustomerPortalLinkRequestEntity' from JSON`);
}
//# sourceMappingURL=createcustomerportallinkrequestentity.js.map