/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { LicenseEntity$inboundSchema, LicenseEntity$outboundSchema, } from "./licenseentity.js";
/** @internal */
export const ProductFeatureEntity$inboundSchema = z.object({
    license: LicenseEntity$inboundSchema,
});
/** @internal */
export const ProductFeatureEntity$outboundSchema = z.object({
    license: LicenseEntity$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ProductFeatureEntity$;
(function (ProductFeatureEntity$) {
    /** @deprecated use `ProductFeatureEntity$inboundSchema` instead. */
    ProductFeatureEntity$.inboundSchema = ProductFeatureEntity$inboundSchema;
    /** @deprecated use `ProductFeatureEntity$outboundSchema` instead. */
    ProductFeatureEntity$.outboundSchema = ProductFeatureEntity$outboundSchema;
})(ProductFeatureEntity$ || (ProductFeatureEntity$ = {}));
export function productFeatureEntityToJSON(productFeatureEntity) {
    return JSON.stringify(ProductFeatureEntity$outboundSchema.parse(productFeatureEntity));
}
export function productFeatureEntityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ProductFeatureEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ProductFeatureEntity' from JSON`);
}
//# sourceMappingURL=productfeatureentity.js.map