/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const FeatureEntity$inboundSchema = z.object({
    id: z.string(),
    type: z.string(),
    description: z.string(),
});
/** @internal */
export const FeatureEntity$outboundSchema = z.object({
    id: z.string(),
    type: z.string(),
    description: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var FeatureEntity$;
(function (FeatureEntity$) {
    /** @deprecated use `FeatureEntity$inboundSchema` instead. */
    FeatureEntity$.inboundSchema = FeatureEntity$inboundSchema;
    /** @deprecated use `FeatureEntity$outboundSchema` instead. */
    FeatureEntity$.outboundSchema = FeatureEntity$outboundSchema;
})(FeatureEntity$ || (FeatureEntity$ = {}));
export function featureEntityToJSON(featureEntity) {
    return JSON.stringify(FeatureEntity$outboundSchema.parse(featureEntity));
}
export function featureEntityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => FeatureEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'FeatureEntity' from JSON`);
}
//# sourceMappingURL=featureentity.js.map