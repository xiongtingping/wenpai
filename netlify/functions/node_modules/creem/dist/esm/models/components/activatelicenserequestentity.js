/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ActivateLicenseRequestEntity$inboundSchema = z.object({
    key: z.string(),
    instance_name: z.string(),
}).transform((v) => {
    return remap$(v, {
        "instance_name": "instanceName",
    });
});
/** @internal */
export const ActivateLicenseRequestEntity$outboundSchema = z.object({
    key: z.string(),
    instanceName: z.string(),
}).transform((v) => {
    return remap$(v, {
        instanceName: "instance_name",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ActivateLicenseRequestEntity$;
(function (ActivateLicenseRequestEntity$) {
    /** @deprecated use `ActivateLicenseRequestEntity$inboundSchema` instead. */
    ActivateLicenseRequestEntity$.inboundSchema = ActivateLicenseRequestEntity$inboundSchema;
    /** @deprecated use `ActivateLicenseRequestEntity$outboundSchema` instead. */
    ActivateLicenseRequestEntity$.outboundSchema = ActivateLicenseRequestEntity$outboundSchema;
})(ActivateLicenseRequestEntity$ || (ActivateLicenseRequestEntity$ = {}));
export function activateLicenseRequestEntityToJSON(activateLicenseRequestEntity) {
    return JSON.stringify(ActivateLicenseRequestEntity$outboundSchema.parse(activateLicenseRequestEntity));
}
export function activateLicenseRequestEntityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ActivateLicenseRequestEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ActivateLicenseRequestEntity' from JSON`);
}
//# sourceMappingURL=activatelicenserequestentity.js.map