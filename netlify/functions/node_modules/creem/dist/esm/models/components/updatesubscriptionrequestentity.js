/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { UpsertSubscriptionItemEntity$inboundSchema, UpsertSubscriptionItemEntity$outboundSchema, } from "./upsertsubscriptionitementity.js";
/**
 * The update behavior for the subscription (defaults to proration)
 */
export const UpdateBehavior = {
    ProrationChargeImmediately: "proration-charge-immediately",
    ProrationCharge: "proration-charge",
    ProrationNone: "proration-none",
};
/** @internal */
export const UpdateBehavior$inboundSchema = z.nativeEnum(UpdateBehavior);
/** @internal */
export const UpdateBehavior$outboundSchema = UpdateBehavior$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateBehavior$;
(function (UpdateBehavior$) {
    /** @deprecated use `UpdateBehavior$inboundSchema` instead. */
    UpdateBehavior$.inboundSchema = UpdateBehavior$inboundSchema;
    /** @deprecated use `UpdateBehavior$outboundSchema` instead. */
    UpdateBehavior$.outboundSchema = UpdateBehavior$outboundSchema;
})(UpdateBehavior$ || (UpdateBehavior$ = {}));
/** @internal */
export const UpdateSubscriptionRequestEntity$inboundSchema = z.object({
    items: z.array(UpsertSubscriptionItemEntity$inboundSchema).optional(),
    update_behavior: UpdateBehavior$inboundSchema.default("proration-charge"),
}).transform((v) => {
    return remap$(v, {
        "update_behavior": "updateBehavior",
    });
});
/** @internal */
export const UpdateSubscriptionRequestEntity$outboundSchema = z.object({
    items: z.array(UpsertSubscriptionItemEntity$outboundSchema).optional(),
    updateBehavior: UpdateBehavior$outboundSchema.default("proration-charge"),
}).transform((v) => {
    return remap$(v, {
        updateBehavior: "update_behavior",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpdateSubscriptionRequestEntity$;
(function (UpdateSubscriptionRequestEntity$) {
    /** @deprecated use `UpdateSubscriptionRequestEntity$inboundSchema` instead. */
    UpdateSubscriptionRequestEntity$.inboundSchema = UpdateSubscriptionRequestEntity$inboundSchema;
    /** @deprecated use `UpdateSubscriptionRequestEntity$outboundSchema` instead. */
    UpdateSubscriptionRequestEntity$.outboundSchema = UpdateSubscriptionRequestEntity$outboundSchema;
})(UpdateSubscriptionRequestEntity$ || (UpdateSubscriptionRequestEntity$ = {}));
export function updateSubscriptionRequestEntityToJSON(updateSubscriptionRequestEntity) {
    return JSON.stringify(UpdateSubscriptionRequestEntity$outboundSchema.parse(updateSubscriptionRequestEntity));
}
export function updateSubscriptionRequestEntityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpdateSubscriptionRequestEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpdateSubscriptionRequestEntity' from JSON`);
}
//# sourceMappingURL=updatesubscriptionrequestentity.js.map