/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomerRequestEntity$inboundSchema, CustomerRequestEntity$outboundSchema, } from "./customerrequestentity.js";
import { CustomFieldRequestEntity$inboundSchema, CustomFieldRequestEntity$outboundSchema, } from "./customfieldrequestentity.js";
/** @internal */
export const CreateCheckoutRequest$inboundSchema = z.object({
    request_id: z.string().optional(),
    product_id: z.string(),
    units: z.number().optional(),
    discount_code: z.string().optional(),
    customer: CustomerRequestEntity$inboundSchema.optional(),
    custom_field: z.array(CustomFieldRequestEntity$inboundSchema).optional(),
    success_url: z.string().optional(),
    metadata: z.record(z.any()).optional(),
}).transform((v) => {
    return remap$(v, {
        "request_id": "requestId",
        "product_id": "productId",
        "discount_code": "discountCode",
        "custom_field": "customField",
        "success_url": "successUrl",
    });
});
/** @internal */
export const CreateCheckoutRequest$outboundSchema = z.object({
    requestId: z.string().optional(),
    productId: z.string(),
    units: z.number().optional(),
    discountCode: z.string().optional(),
    customer: CustomerRequestEntity$outboundSchema.optional(),
    customField: z.array(CustomFieldRequestEntity$outboundSchema).optional(),
    successUrl: z.string().optional(),
    metadata: z.record(z.any()).optional(),
}).transform((v) => {
    return remap$(v, {
        requestId: "request_id",
        productId: "product_id",
        discountCode: "discount_code",
        customField: "custom_field",
        successUrl: "success_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateCheckoutRequest$;
(function (CreateCheckoutRequest$) {
    /** @deprecated use `CreateCheckoutRequest$inboundSchema` instead. */
    CreateCheckoutRequest$.inboundSchema = CreateCheckoutRequest$inboundSchema;
    /** @deprecated use `CreateCheckoutRequest$outboundSchema` instead. */
    CreateCheckoutRequest$.outboundSchema = CreateCheckoutRequest$outboundSchema;
})(CreateCheckoutRequest$ || (CreateCheckoutRequest$ = {}));
export function createCheckoutRequestToJSON(createCheckoutRequest) {
    return JSON.stringify(CreateCheckoutRequest$outboundSchema.parse(createCheckoutRequest));
}
export function createCheckoutRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateCheckoutRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateCheckoutRequest' from JSON`);
}
//# sourceMappingURL=createcheckoutrequest.js.map