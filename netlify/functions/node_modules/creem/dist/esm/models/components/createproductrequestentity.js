/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { CustomFieldRequestEntity$inboundSchema, CustomFieldRequestEntity$outboundSchema, } from "./customfieldrequestentity.js";
/** @internal */
export const CreateProductRequestEntity$inboundSchema = z.object({
    name: z.string(),
    description: z.string().optional(),
    image_url: z.string().optional(),
    price: z.number().int(),
    currency: z.string(),
    billing_type: z.string(),
    billing_period: z.string().optional(),
    tax_mode: z.string().optional(),
    tax_category: z.string().optional(),
    default_success_url: z.string().optional(),
    custom_field: z.array(CustomFieldRequestEntity$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "image_url": "imageUrl",
        "billing_type": "billingType",
        "billing_period": "billingPeriod",
        "tax_mode": "taxMode",
        "tax_category": "taxCategory",
        "default_success_url": "defaultSuccessUrl",
        "custom_field": "customField",
    });
});
/** @internal */
export const CreateProductRequestEntity$outboundSchema = z.object({
    name: z.string(),
    description: z.string().optional(),
    imageUrl: z.string().optional(),
    price: z.number().int(),
    currency: z.string(),
    billingType: z.string(),
    billingPeriod: z.string().optional(),
    taxMode: z.string().optional(),
    taxCategory: z.string().optional(),
    defaultSuccessUrl: z.string().optional(),
    customField: z.array(CustomFieldRequestEntity$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        imageUrl: "image_url",
        billingType: "billing_type",
        billingPeriod: "billing_period",
        taxMode: "tax_mode",
        taxCategory: "tax_category",
        defaultSuccessUrl: "default_success_url",
        customField: "custom_field",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProductRequestEntity$;
(function (CreateProductRequestEntity$) {
    /** @deprecated use `CreateProductRequestEntity$inboundSchema` instead. */
    CreateProductRequestEntity$.inboundSchema = CreateProductRequestEntity$inboundSchema;
    /** @deprecated use `CreateProductRequestEntity$outboundSchema` instead. */
    CreateProductRequestEntity$.outboundSchema = CreateProductRequestEntity$outboundSchema;
})(CreateProductRequestEntity$ || (CreateProductRequestEntity$ = {}));
export function createProductRequestEntityToJSON(createProductRequestEntity) {
    return JSON.stringify(CreateProductRequestEntity$outboundSchema.parse(createProductRequestEntity));
}
export function createProductRequestEntityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProductRequestEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProductRequestEntity' from JSON`);
}
//# sourceMappingURL=createproductrequestentity.js.map