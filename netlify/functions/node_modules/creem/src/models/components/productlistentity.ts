/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PaginationEntity,
  PaginationEntity$inboundSchema,
  PaginationEntity$Outbound,
  PaginationEntity$outboundSchema,
} from "./paginationentity.js";
import {
  ProductEntity,
  ProductEntity$inboundSchema,
  ProductEntity$Outbound,
  ProductEntity$outboundSchema,
} from "./productentity.js";

export type ProductListEntity = {
  /**
   * List of product items
   */
  items: Array<ProductEntity>;
  /**
   * Pagination details for the list
   */
  pagination: PaginationEntity;
};

/** @internal */
export const ProductListEntity$inboundSchema: z.ZodType<
  ProductListEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(ProductEntity$inboundSchema),
  pagination: PaginationEntity$inboundSchema,
});

/** @internal */
export type ProductListEntity$Outbound = {
  items: Array<ProductEntity$Outbound>;
  pagination: PaginationEntity$Outbound;
};

/** @internal */
export const ProductListEntity$outboundSchema: z.ZodType<
  ProductListEntity$Outbound,
  z.ZodTypeDef,
  ProductListEntity
> = z.object({
  items: z.array(ProductEntity$outboundSchema),
  pagination: PaginationEntity$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductListEntity$ {
  /** @deprecated use `ProductListEntity$inboundSchema` instead. */
  export const inboundSchema = ProductListEntity$inboundSchema;
  /** @deprecated use `ProductListEntity$outboundSchema` instead. */
  export const outboundSchema = ProductListEntity$outboundSchema;
  /** @deprecated use `ProductListEntity$Outbound` instead. */
  export type Outbound = ProductListEntity$Outbound;
}

export function productListEntityToJSON(
  productListEntity: ProductListEntity,
): string {
  return JSON.stringify(
    ProductListEntity$outboundSchema.parse(productListEntity),
  );
}

export function productListEntityFromJSON(
  jsonString: string,
): SafeParseResult<ProductListEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProductListEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProductListEntity' from JSON`,
  );
}
