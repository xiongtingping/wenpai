/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteDiscountRequest = {
  id: string;
  xApiKey: string;
};

/** @internal */
export const DeleteDiscountRequest$inboundSchema: z.ZodType<
  DeleteDiscountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  "x-api-key": z.string(),
}).transform((v) => {
  return remap$(v, {
    "x-api-key": "xApiKey",
  });
});

/** @internal */
export type DeleteDiscountRequest$Outbound = {
  id: string;
  "x-api-key": string;
};

/** @internal */
export const DeleteDiscountRequest$outboundSchema: z.ZodType<
  DeleteDiscountRequest$Outbound,
  z.ZodTypeDef,
  DeleteDiscountRequest
> = z.object({
  id: z.string(),
  xApiKey: z.string(),
}).transform((v) => {
  return remap$(v, {
    xApiKey: "x-api-key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteDiscountRequest$ {
  /** @deprecated use `DeleteDiscountRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteDiscountRequest$inboundSchema;
  /** @deprecated use `DeleteDiscountRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteDiscountRequest$outboundSchema;
  /** @deprecated use `DeleteDiscountRequest$Outbound` instead. */
  export type Outbound = DeleteDiscountRequest$Outbound;
}

export function deleteDiscountRequestToJSON(
  deleteDiscountRequest: DeleteDiscountRequest,
): string {
  return JSON.stringify(
    DeleteDiscountRequest$outboundSchema.parse(deleteDiscountRequest),
  );
}

export function deleteDiscountRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteDiscountRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteDiscountRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteDiscountRequest' from JSON`,
  );
}
