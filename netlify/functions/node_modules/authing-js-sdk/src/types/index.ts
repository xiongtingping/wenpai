import {
  User as originalUser,
  PaginatedUsers as originalPaginatedUsers
} from './graphql.v2';

export interface User extends Omit<originalUser, 'customData'> {
  customData?: KeyValuePair;
}

export interface PaginatedUsers extends Omit<originalPaginatedUsers, 'list'> {
  list: Array<User>;
}

export type DeepPartial<T> = {
  [P in keyof T]?: DeepPartial<T[P]>;
};

export type KeyValuePair = {
  [x: string]: any;
};

export type Lang = 'zh-CN' | 'en-US';

export interface Encryption {
  type: string;
  publicKey: string;
}
export interface FingerObjType {
  userAgentFingerprint: string;
  audioFingerprint: string;
  canvasFingerprint: string;
  screenResolutionFingerprint: string;
  webglFingerprint: string;
  fontsFingerprint: string;
  pluginsFingerprint: string;
}

export interface FingerParamsObjType {
  userAgent: string;
  audio: string;
  canvas: string;
  screenResolution: string;
  webgl: string;
  fonts: string;
  plugins: string;
  [key: string]: string;
}

export type CreateFingerprintType = () => Promise<{
  deviceFingers: FingerParamsObjType;
  browserId: string;
}>;

export interface Identity {
  /** 身份源 ID */
  identityId: string;
  /** 身份源连接 ID */
  extIdpId: string;
  /** 外部身份源类型 */
  provider: string;
  /** Identity 类型，如 unionid, openid, primary */
  type: string;
  /** 在外部身份源中的 ID */
  userIdInIdp: string;
  /** 用户在 idp 中的身份信息 */
  userInfoInIdp: { [x: string]: any };
  /** 在外部身份源中的 Access Token（此参数只会在用户主动获取时返回，管理侧接口不会返回） */
  accessToken: string;
  /** 在外部身份源中的 Refresh Token（此参数只会在用户主动获取时返回，管理侧接口不会返回）。 */
  refreshToken: string;
  /** 身份来自的身份源连接 ID 列表 */
  originConnIds: string[];
}
