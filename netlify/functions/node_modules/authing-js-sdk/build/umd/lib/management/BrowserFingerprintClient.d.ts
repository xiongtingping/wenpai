import { ManagementClientOptions } from './types';
import { HttpClient } from '../common/HttpClient';
import { ManagementTokenProvider } from "./ManagementTokenProvider";
import { DeviceStatus, DeviceList, DeviceDetails } from './types';
export declare class BrowserFingerprintClient {
    options: ManagementClientOptions;
    httpClient: HttpClient;
    tokenProvider: ManagementTokenProvider;
    constructor(options: ManagementClientOptions, httpClient: HttpClient, tokenProvider: ManagementTokenProvider);
    /**
     * 设备管理 - 列表
     * @param options
     * @returns
     */
    getDeviceList(options?: {
        page?: number;
        limit?: number;
    }): Promise<DeviceList>;
    /**
     * 设备管理 - 详情
     * @param id
     * @returns
     */
    getDeviceDetails(id: string): Promise<DeviceDetails>;
    /**
     * 设备管理 - 设备状态
     * @param id
     * @returns
     */
    getDeviceStatus(id: string): Promise<DeviceStatus>;
    /**
     * 设备管理 - 移除设备
     * @param id
     * @returns
     */
    delDevice(id: string): Promise<boolean>;
    /**
     * 设备管理 - 禁用设备
     * @param id
     * @returns
     */
    disableDevice(id: string): Promise<boolean>;
    /**
     * 设备管理 - 启用设备
     * @param id
     * @returns
     */
    enableDevice(id: string): Promise<boolean>;
    /**
     * 设备管理 - 挂起设备
     * @param id
     * @param endTime
     * @returns
     */
    suspendDevice(id: string, endTime: number): Promise<boolean>;
    /**
     * 用户中心 - 列表
     * @param options
     * @returns
     */
    getDeviceUserList(options?: {
        page?: number;
        limit?: number;
        userId?: string;
    }): Promise<DeviceList>;
    /**
     * 用户中心 - 移除设备
     * @param id
     * @returns
     */
    delDeviceUser(options: {
        userId: string;
        id: string;
    }): Promise<boolean>;
    /**
     * 用户中心 - 禁用设备
     * @param id
     * @returns
     */
    disableDeviceUser(options: {
        userId: string;
        id: string;
    }): Promise<boolean>;
    /**
     * 用户中心 - 启用设备
     * @param id
     * @returns
     */
    enableDeviceUser(options: {
        userId: string;
        id: string;
    }): Promise<boolean>;
    /**
     * 用户中心 - 挂起设备
     * @param userId
     * @param id
     * @param endTime
     * @returns
     */
    suspendDeviceUser(options: {
        userId: string;
        id: string;
        endTime: number;
    }): Promise<boolean>;
}
