var e=Object.defineProperty;import{bg as r,bh as t,bi as n}from"./index-CYvVoP-H.js";const o={model:"gpt-4o",temperature:.7,maxTokens:1e3,timeout:3e4,maxRetries:3,retryDelay:1e3};class s{constructor(){var n,o;((r,t,n)=>{t in r?e(r,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):r[t]=n})(this,"symbol"!=typeof(n="config")?n+"":n,o),this.config=r(),t(this.config.openai.apiKey,"openai")}async checkStatus(e="openai"){try{const r=await fetch(n("netlify"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({provider:e,action:"status"})}),t=await r.json();return{success:r.ok,available:t.available||!1,provider:e,message:t.message,error:t.error}}catch(r){return{success:!1,available:!1,provider:e,error:r instanceof Error?r.message:"网络连接失败"}}}async generateText(e){const{messages:r,model:n=o.model,temperature:s=o.temperature,maxTokens:a=o.maxTokens,provider:i="openai"}=e;for(let m=1;m<=o.maxRetries;m++)try{return"openai"===i&&t(this.config.openai.apiKey,"openai")?await this.callOpenAIDevProxy({messages:r,model:n,temperature:s,maxTokens:a}):await this.callNetlifyProxy({provider:i,action:"generate",messages:r,model:n,temperature:s,maxTokens:a})}catch(c){if(m===o.maxRetries)return{success:!1,error:c instanceof Error?c.message:"文本生成失败",message:`经过${o.maxRetries}次尝试后仍然失败`};await new Promise(e=>setTimeout(e,o.retryDelay*m))}return{success:!1,error:"文本生成失败"}}async generateImage(e){const{prompt:r,n:s=1,size:a="512x512",response_format:i="url",reference_image:c}=e;if(!t(this.config.openai.apiKey,"openai"))return{success:!1,error:"OpenAI API密钥未配置，请在.env.local文件中设置VITE_OPENAI_API_KEY"};for(let p=1;p<=o.maxRetries;p++)try{if(t(this.config.openai.apiKey,"openai"))return await this.callOpenAIImageAPI({prompt:r,n:s,size:a,response_format:i,reference_image:c});{const e=await fetch(n("netlify"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({provider:"openai",action:"generate-image",prompt:r,n:s,size:a,response_format:i,reference_image:c})});if(!e.ok)throw new Error(`HTTP错误: ${e.status}`);return await e.json()}}catch(m){if(p===o.maxRetries)return{success:!1,error:m instanceof Error?m.message:"图像生成失败",message:`经过${o.maxRetries}次尝试后仍然失败`};await new Promise(e=>setTimeout(e,o.retryDelay*p))}return{success:!1,error:"图像生成失败"}}async generateImagesBatch(e,r={}){const t=[];for(const o of e)try{const n=await this.generateImage({...r,prompt:o});t.push(n),e.length>1&&await new Promise(e=>setTimeout(e,1e3))}catch(n){t.push({success:!1,error:n instanceof Error?n.message:"批量图像生成失败"})}return t}async callOpenAIDevProxy(e){var r;const{messages:s,model:a="gpt-4o",temperature:i=.7,maxTokens:c=1e3}=e;try{if(!t(this.config.openai.apiKey,"openai"))throw new Error("OpenAI API Key未配置，请在.env.local中设置VITE_OPENAI_API_KEY");const e=new AbortController,m=setTimeout(()=>e.abort(),o.timeout),p=await fetch(n("openai"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.openai.apiKey}`},body:JSON.stringify({model:a,messages:s,temperature:i,max_tokens:c,stream:!1}),signal:e.signal});if(clearTimeout(m),!p.ok){const e=await p.json().catch(()=>({}));throw new Error(`OpenAI API调用失败: ${(null==(r=e.error)?void 0:r.message)||`HTTP ${p.status}`}`)}return{success:!0,data:{data:await p.json()},provider:"openai",timestamp:(new Date).toISOString()}}catch(m){if(m instanceof Error&&"AbortError"===m.name)throw new Error("OpenAI API请求超时，请检查网络连接或稍后重试");throw new Error(`OpenAI API连接失败: ${m instanceof Error?m.message:"未知错误"}`)}}async callOpenAIImageAPI(e){var r;const{prompt:t,n:s=1,size:a="512x512",response_format:i="url",reference_image:c}=e;try{const e=new AbortController,m=setTimeout(()=>e.abort(),o.timeout),p={model:"dall-e-3",prompt:t,n:s,size:a,response_format:i};c&&(p.image=c,p.model="dall-e-3");const l=await fetch(n("openai").replace("/chat/completions","/images/generations"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.config.openai.apiKey}`},body:JSON.stringify(p),signal:e.signal});if(clearTimeout(m),!l.ok){const e=await l.json().catch(()=>({}));throw new Error(`OpenAI图像生成API调用失败: ${(null==(r=e.error)?void 0:r.message)||`HTTP ${l.status}`}`)}const u=await l.json();return{success:!0,data:{images:u.data.map(e=>({url:e.url,revised_prompt:e.revised_prompt})),created:u.created},provider:"openai",timestamp:(new Date).toISOString()}}catch(m){if(m instanceof Error&&"AbortError"===m.name)throw new Error("OpenAI图像生成API请求超时，请检查网络连接或稍后重试");throw new Error(`OpenAI图像生成API连接失败: ${m instanceof Error?m.message:"未知错误"}`)}}async callNetlifyProxy(e){try{const r=new AbortController,t=setTimeout(()=>r.abort(),o.timeout),s=await fetch(n("netlify"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e),signal:r.signal});if(clearTimeout(t),!s.ok)throw new Error(`HTTP错误: ${s.status}`);return{success:!0,data:await s.json(),provider:e.provider,timestamp:(new Date).toISOString()}}catch(r){if(r instanceof Error&&"AbortError"===r.name)throw new Error("Netlify代理请求超时，请检查网络连接");throw new Error(`Netlify代理调用失败: ${r instanceof Error?r.message:"未知错误"}`)}}async adaptContent(e,r,t){try{const t=[{role:"system",content:"你是一个专业的内容适配专家，能够将内容适配到不同的平台。"},{role:"user",content:`请将以下内容适配到平台：${r.join(", ")}\n\n内容：${e}`}];return await this.generateText({messages:t,provider:"openai"})}catch(n){return{success:!1,error:n instanceof Error?n.message:"内容适配失败"}}}async summarizeContent(e){try{const r=[{role:"system",content:"你是一个专业的内容总结专家，能够生成简洁有用的总结。"},{role:"user",content:`请为以下内容生成AI智能总结：\n\n${e}`}];return await this.generateText({messages:r,provider:"openai"})}catch(r){return{success:!1,error:r instanceof Error?r.message:"内容总结失败"}}}async analyzeBrandContent(e){try{const r=[{role:"system",content:"你是一个专业的品牌分析专家，能够分析品牌调性、关键词和建议。请以JSON格式返回结果。"},{role:"user",content:`请分析以下品牌内容：\n\n${e}\n\n请返回JSON格式的分析结果，包含：keywords（关键词数组）、tone（语气分析）、suggestions（建议数组）`}];return await this.generateText({messages:r,provider:"openai"})}catch(r){return{success:!1,error:r instanceof Error?r.message:"品牌内容分析失败"}}}async checkContentTone(e,r){try{const t=[{role:"system",content:"你是一个专业的品牌调性检查专家，能够评估内容是否符合品牌调性。"},{role:"user",content:`请检查以下内容是否符合品牌调性：\n\n内容：${e}\n\n品牌档案：${JSON.stringify(r)}`}];return await this.generateText({messages:t,provider:"openai"})}catch(t){return{success:!1,error:t instanceof Error?t.message:"内容调性检查失败"}}}async recommendEmojis(e){try{const r=[{role:"system",content:"你是一个专业的Emoji推荐专家，能够为内容推荐合适的Emoji。"},{role:"user",content:`请为以下内容推荐合适的Emoji：\n\n${e}`}];return await this.generateText({messages:r,provider:"openai"})}catch(r){return{success:!1,error:r instanceof Error?r.message:"Emoji推荐失败"}}}async generateCreativeContent(e){try{const{prompt:r,context:t={},style:n="creative",maxTokens:s=o.maxTokens,contentType:a="text"}=e;let i="你是一个专业的创意内容创作专家，能够生成有创意的文本内容。";switch(a){case"video":i="你是一个专业的视频脚本创作专家，能够生成结构化的视频脚本。";break;case"social_media":i="你是一个专业的社交媒体内容创作专家，能够生成适合各平台的内容。";break;case"brand_consistent":i="你是一个专业的品牌内容创作专家，能够生成符合品牌调性的内容。";break;default:i="你是一个专业的创意内容创作专家，能够生成有创意的文本内容。"}let c="";Object.keys(t).length>0&&(c=`\n\n上下文信息：${JSON.stringify(t,null,2)}`);const m=[{role:"system",content:i},{role:"user",content:`${r}${c}\n\n请以${n}的风格生成内容。`}];return await this.generateText({messages:m,maxTokens:s,provider:"openai"})}catch(r){return{success:!1,error:r instanceof Error?r.message:"创意内容生成失败"}}}async extractContent(e){try{const{url:r,text:t,contentType:n,options:o={}}=e;if(!r&&!t)return{success:!1,error:"请提供URL或文本内容"};const s={provider:"openai",action:"extract-content",contentType:n,options:o};r&&(s.url=r),t&&(s.text=t);const a=await fetch("/.netlify/functions/api",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});if(!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);const i=await a.json();return i.success?{success:!0,data:i.data}:{success:!1,error:i.error||"内容提取失败"}}catch(r){return{success:!1,error:r instanceof Error?r.message:"网络请求失败"}}}}const a=new s;export{s as AIService,a as default};
