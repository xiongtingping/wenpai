async function e(e){var r;const{messages:t,model:o="gpt-4o",temperature:a=.7,maxTokens:n=1e3}=e;try{const e=new AbortController,s=setTimeout(()=>e.abort(),3e4),i=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer sk-your-actual-openai-api-key-here"},body:JSON.stringify({model:o,messages:t,temperature:a,max_tokens:n,stream:!1}),signal:e.signal});if(clearTimeout(s),!i.ok){const e=await i.json().catch(()=>({}));throw 401===i.status?new Error("OpenAI API密钥无效，请检查VITE_OPENAI_API_KEY配置"):429===i.status?new Error("OpenAI API请求频率过高，请稍后重试"):500===i.status?new Error("OpenAI服务器内部错误，请稍后重试"):new Error(`OpenAI API调用失败: ${(null==(r=e.error)?void 0:r.message)||`HTTP ${i.status}`}`)}return{success:!0,data:{data:await i.json()}}}catch(s){if(s instanceof Error&&"AbortError"===s.name)throw new Error("OpenAI API请求超时，请检查网络连接或稍后重试");if(s instanceof Error&&(s.message.includes("fetch")||s.message.includes("network")))throw new Error("网络连接失败，请检查网络设置或配置代理");throw new Error(`OpenAI API连接失败: ${s instanceof Error?s.message:"未知错误"}`)}}export{e as callOpenAIDevProxy};
