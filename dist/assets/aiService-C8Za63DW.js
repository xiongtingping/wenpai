var e=Object.defineProperty;import{as as t,aB as r,au as s,aC as n}from"./index-Cu70HESd.js";async function o(e){var s,n,o;const c=Date.now(),{prompt:i,model:m="gpt-4",maxTokens:u=2e3,temperature:p=.7,systemPrompt:l,stream:d=!1,userId:g,extraParams:y={}}=e;try{const e=t();if(r(),!e.openai.apiKey)throw new Error("OpenAI API密钥未配置");const f=[];l&&f.push({role:"system",content:l}),f.push({role:"user",content:i});const h={model:a(m),messages:f,max_tokens:u,temperature:p,stream:d,...y},w={"Content-Type":"application/json",Authorization:`Bearer ${e.openai.apiKey}`};g&&(w["X-User-ID"]=g);const v=await fetch(e.openai.baseURL+"/v1/chat/completions",{method:"POST",headers:w,body:JSON.stringify(h)});if(!v.ok){const e=await v.json().catch(()=>({}));throw new Error(`API请求失败: ${v.status} ${v.statusText} - ${(null==(s=e.error)?void 0:s.message)||"未知错误"}`)}if(d)return async function(e,t,r){var s,n,o;const a=null==(s=e.body)?void 0:s.getReader();if(!a)throw new Error("无法读取流式响应");let c="";const i=new TextDecoder;try{for(;;){const{done:e,value:s}=await a.read();if(e)break;const u=i.decode(s).split("\n");for(const a of u)if(a.startsWith("data: ")){const e=a.slice(6);if("[DONE]"===e)return{content:c,model:t,responseTime:Date.now()-r,success:!0};try{const t=null==(o=null==(n=JSON.parse(e).choices[0])?void 0:n.delta)?void 0:o.content;t&&(c+=t)}catch(m){}}}return{content:c,model:t,responseTime:Date.now()-r,success:!0}}finally{a.releaseLock()}}(v,m,c);const T=await v.json();return{content:(null==(o=null==(n=T.choices[0])?void 0:n.message)?void 0:o.content)||"",model:m,usage:T.usage,responseTime:Date.now()-c,success:!0}}catch(f){return{content:"",model:m,responseTime:Date.now()-c,success:!1,error:f instanceof Error?f.message:"未知错误"}}}function a(e){return{"gpt-4":"gpt-4","gpt-4-turbo":"gpt-4-1106-preview","gpt-3.5-turbo":"gpt-3.5-turbo","gemini-pro":"gemini-pro","gemini-pro-vision":"gemini-pro-vision","deepseek-chat":"deepseek-chat","deepseek-coder":"deepseek-coder",qwen:"qwen-turbo",llama:"llama-2-70b-chat",mistral:"mistral-7b-instruct","claude-3":"claude-3-opus-20240229","claude-3-sonnet":"claude-3-sonnet-20240229","claude-3-haiku":"claude-3-haiku-20240307"}[e]||e}function c(e){return{"dall-e-3":"dall-e-3","dall-e-2":"dall-e-2",midjourney:"midjourney","stable-diffusion":"stable-diffusion-xl",deepfloyd:"deepfloyd-if"}[e]||e}const i={model:"gpt-4o",temperature:.7,maxTokens:1e3,timeout:3e4,maxRetries:3,retryDelay:1e3};class m{constructor(){var r,n;((t,r,s)=>{r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[r]=s})(this,"symbol"!=typeof(r="config")?r+"":r,n),this.config=t(),s(this.config.openai.apiKey,"openai")}async checkStatus(e="openai"){try{const t=await fetch(n("netlify"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({provider:e,action:"status"})}),r=await t.json();return{success:t.ok,available:r.available||!1,provider:e,message:r.message,error:r.error}}catch(t){return{success:!1,available:!1,provider:e,error:t instanceof Error?t.message:"网络连接失败"}}}async generateText(e){var t;const{messages:r,model:s=i.model,temperature:n=i.temperature,maxTokens:a=i.maxTokens,provider:c="openai"}=e;try{const e=r.filter(e=>"user"===e.role).map(e=>e.content).join("\n\n"),m=null==(t=r.find(e=>"system"===e.role))?void 0:t.content,u=await async function(e,t=3){let r=null;for(let n=0;n<t;n++){try{const t=await o(e);if(t.success)return t;r=new Error(t.error||"调用失败")}catch(s){r=s instanceof Error?s:new Error("未知错误")}n<t-1&&await new Promise(e=>setTimeout(e,1e3*Math.pow(2,n)))}throw r||new Error("所有重试都失败了")}({prompt:e,model:s,temperature:n,maxTokens:a,systemPrompt:m,extraParams:{provider:c}},i.maxRetries);return u.success?{success:!0,data:{data:{choices:[{message:{content:u.content}}],usage:u.usage}},provider:c,timestamp:(new Date).toISOString()}:{success:!1,error:u.error||"文本生成失败",provider:c,timestamp:(new Date).toISOString()}}catch(m){return{success:!1,error:m instanceof Error?m.message:"文本生成失败",provider:c,timestamp:(new Date).toISOString()}}}async generateImage(e){const{prompt:r,n:s=1,size:n="512x512",response_format:o="url",reference_image:a}=e;try{const e=await async function(e){var r;const s=Date.now(),{prompt:n,model:o="dall-e-3",n:a=1,size:i="1024x1024",responseFormat:m="url",referenceImage:u,userId:p}=e;try{const e=t();if(!e.openai.apiKey)throw new Error("OpenAI API密钥未配置");const l={model:c(o),prompt:n,n:a,size:i,response_format:m};u&&(l.image=u,l.model="dall-e-3");const d={"Content-Type":"application/json",Authorization:`Bearer ${e.openai.apiKey}`};p&&(d["X-User-ID"]=p);const g=await fetch(e.openai.baseURL+"/v1/images/generations",{method:"POST",headers:d,body:JSON.stringify(l)});if(!g.ok){const e=await g.json().catch(()=>({}));throw new Error(`图像生成API请求失败: ${g.status} ${g.statusText} - ${(null==(r=e.error)?void 0:r.message)||"未知错误"}`)}const y=await g.json();return{images:y.data.map(e=>({url:e.url,revisedPrompt:e.revised_prompt})),model:o,responseTime:Date.now()-s,success:!0,created:y.created}}catch(l){return{images:[],model:o,responseTime:Date.now()-s,success:!1,error:l instanceof Error?l.message:"未知错误"}}}({prompt:r,model:"dall-e-3",n:s,size:n,responseFormat:o,referenceImage:a});return e.success?{success:!0,data:{images:e.images,created:e.created},provider:"openai",timestamp:(new Date).toISOString()}:{success:!1,error:e.error||"图像生成失败",provider:"openai",timestamp:(new Date).toISOString()}}catch(i){return{success:!1,error:i instanceof Error?i.message:"图像生成失败",provider:"openai",timestamp:(new Date).toISOString()}}}async generateImagesBatch(e,t={}){const r=[];for(const n of e)try{const s=await this.generateImage({...t,prompt:n});r.push(s),e.length>1&&await new Promise(e=>setTimeout(e,1e3))}catch(s){r.push({success:!1,error:s instanceof Error?s.message:"批量图像生成失败"})}return r}async adaptContent(e,t,r){try{const r=[{role:"system",content:"你是一个专业的内容适配专家，能够将内容适配到不同的平台。"},{role:"user",content:`请将以下内容适配到平台：${t.join(", ")}\n\n内容：${e}`}];return await this.generateText({messages:r,provider:"openai"})}catch(s){return{success:!1,error:s instanceof Error?s.message:"内容适配失败"}}}async summarizeContent(e){try{const t=[{role:"system",content:"你是一个专业的内容总结专家，能够生成简洁有用的总结。"},{role:"user",content:`请为以下内容生成AI智能总结：\n\n${e}`}];return await this.generateText({messages:t,provider:"openai"})}catch(t){return{success:!1,error:t instanceof Error?t.message:"内容总结失败"}}}async analyzeBrandContent(e){try{const t=[{role:"system",content:"你是一个专业的品牌分析专家，能够分析品牌调性、关键词和建议。请以JSON格式返回结果。"},{role:"user",content:`请分析以下品牌内容：\n\n${e}\n\n请返回JSON格式的分析结果，包含：keywords（关键词数组）、tone（语气分析）、suggestions（建议数组）`}];return await this.generateText({messages:t,provider:"openai"})}catch(t){return{success:!1,error:t instanceof Error?t.message:"品牌内容分析失败"}}}async checkContentTone(e,t){try{const r=[{role:"system",content:"你是一个专业的品牌调性检查专家，能够评估内容是否符合品牌调性。"},{role:"user",content:`请检查以下内容是否符合品牌调性：\n\n内容：${e}\n\n品牌档案：${JSON.stringify(t)}`}];return await this.generateText({messages:r,provider:"openai"})}catch(r){return{success:!1,error:r instanceof Error?r.message:"内容调性检查失败"}}}async recommendEmojis(e){try{const t=[{role:"system",content:"你是一个专业的Emoji推荐专家，能够为内容推荐合适的Emoji。"},{role:"user",content:`请为以下内容推荐合适的Emoji：\n\n${e}`}];return await this.generateText({messages:t,provider:"openai"})}catch(t){return{success:!1,error:t instanceof Error?t.message:"Emoji推荐失败"}}}async generateCreativeContent(e){try{const{prompt:t,context:r={},style:s="creative",maxTokens:n=i.maxTokens,contentType:o="text"}=e;let a="你是一个专业的创意内容创作专家，能够生成有创意的文本内容。";switch(o){case"video":a="你是一个专业的视频脚本创作专家，能够生成结构化的视频脚本。";break;case"social_media":a="你是一个专业的社交媒体内容创作专家，能够生成适合各平台的内容。";break;case"brand_consistent":a="你是一个专业的品牌内容创作专家，能够生成符合品牌调性的内容。";break;default:a="你是一个专业的创意内容创作专家，能够生成有创意的文本内容。"}let c="";Object.keys(r).length>0&&(c=`\n\n上下文信息：${JSON.stringify(r,null,2)}`);const m=[{role:"system",content:a},{role:"user",content:`${t}${c}\n\n请以${s}的风格生成内容。`}];return await this.generateText({messages:m,maxTokens:n,provider:"openai"})}catch(t){return{success:!1,error:t instanceof Error?t.message:"创意内容生成失败"}}}async extractContent(e){try{const{url:t,text:r,contentType:s,options:n={}}=e;if(!t&&!r)return{success:!1,error:"请提供URL或文本内容"};const o={provider:"openai",action:"extract-content",contentType:s,options:n};t&&(o.url=t),r&&(o.text=r);const a=await fetch("/.netlify/functions/api",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);const c=await a.json();return c.success?{success:!0,data:c.data}:{success:!1,error:c.error||"内容提取失败"}}catch(t){return{success:!1,error:t instanceof Error?t.message:"网络请求失败"}}}}const u=new m;export{m as AIService,u as default};
