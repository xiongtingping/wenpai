#!/bin/bash

# 🔐 Authing Token交换紧急修复脚本
# 解决Authing Token交换400错误问题

echo "🔐 Authing Token交换紧急修复"
echo "=================================="

echo "📋 问题诊断"
echo "=================================="
echo "根据控制台错误信息，问题很明确："
echo ""
echo "错误信息: invalid_client"
echo "错误描述: 应用 token_endpoint_auth_method 配置不为 none"
echo ""
echo "根本原因: Authing应用的Token端点认证方法配置需要调整"
echo ""

echo "🔧 解决方案"
echo "=================================="
echo "有两种解决方案，推荐使用方案1："
echo ""

echo "方案1: 修改Authing应用配置（推荐）"
echo "----------------------------------"
echo "步骤1: 登录Authing控制台"
echo "  - 访问: https://console.authing.cn"
echo "  - 使用您的Authing账号登录"
echo ""
echo "步骤2: 进入应用配置"
echo "  - 点击左侧菜单'应用' → '自建应用'"
echo "  - 找到名为'wenpai'的应用"
echo "  - 点击应用名称进入详情页面"
echo ""
echo "步骤3: 更新Token端点认证方法"
echo "  - 找到'高级配置'或'安全配置'部分"
echo "  - 找到'Token端点认证方法'设置"
echo "  - 将值改为: none"
echo "  - 保存配置"
echo ""
echo "步骤4: 同时更新回调URL（如果还没更新）"
echo "  - 登录回调URL: http://localhost:5174/callback"
echo "  - 登出回调URL: http://localhost:5174/"
echo ""

echo "方案2: 在代码中提供client_secret"
echo "----------------------------------"
echo "如果方案1不可行，可以："
echo "1. 在Authing控制台获取App Secret"
echo "2. 在.env.local中添加: VITE_AUTHING_CLIENT_SECRET=your_secret"
echo "3. 更新代码逻辑"
echo ""

echo "🧪 验证修复"
echo "=================================="
echo "修复后测试步骤："
echo "1. 更新Authing控制台配置"
echo "2. 重启开发服务器"
echo "3. 访问测试页面: http://localhost:5174/authing-complete-test"
echo "4. 点击'跳转登录测试'"
echo "5. 完成Authing认证流程"
echo "6. 检查是否成功回调到应用"
echo ""

echo "✅ 成功标志"
echo "=================================="
echo "修复成功后，您应该看到："
echo "- ✅ 不再出现400错误"
echo "- ✅ Token交换成功"
echo "- ✅ 用户信息正确获取"
echo "- ✅ 登录状态正常显示"
echo ""

echo "📊 配置对比表"
echo "=================================="
echo "| 配置项 | 当前状态 | 需要更新为 | 优先级 |"
echo "|--------|----------|------------|--------|"
echo "| Token端点认证方法 | 需要client_secret | none | 高 |"
echo "| 登录回调URL | 5173端口 | 5174端口 | 高 |"
echo "| 登出回调URL | 5173端口 | 5174端口 | 高 |"
echo ""

echo "🔍 故障排除"
echo "=================================="
echo "如果方案1不可行："
echo "1. 检查Authing应用类型：确保是'自建应用'"
echo "2. 检查应用权限：确保有修改配置的权限"
echo "3. 联系Authing支持：如果找不到相关配置选项"
echo ""
echo "如果方案2不可行："
echo "1. 检查client_secret格式：确保完整复制"
echo "2. 检查环境变量：确保正确设置"
echo "3. 检查代码逻辑：确保正确传递参数"
echo ""

echo "⚡ 快速修复命令"
echo "=================================="
echo "如果您已经更新了Authing控制台配置，可以运行："
echo ""
echo "# 验证配置"
echo "./verify-authing-fix.sh"
echo ""
echo "# 测试功能"
echo "curl -s http://localhost:5174/authing-complete-test"
echo ""

echo "📞 技术支持"
echo "=================================="
echo "如果按照上述步骤操作后仍有问题："
echo "1. 检查Authing服务状态: https://status.authing.cn"
echo "2. 查看Authing官方文档: https://docs.authing.cn"
echo "3. 联系Authing技术支持"
echo "4. 运行诊断脚本: ./verify-authing-fix.sh"
echo ""

echo "🎉 完成标志"
echo "=================================="
echo "当您看到以下情况时，说明修复成功："
echo "1. ✅ 不再出现'invalid_client'错误"
echo "2. ✅ Token交换成功"
echo "3. ✅ 用户信息正确获取和显示"
echo "4. ✅ 登录状态正常保持"
echo "5. ✅ 登出功能正常工作"
echo ""

echo "---"
echo "重要提醒: 请优先尝试方案1（修改Authing应用配置），这是最安全和推荐的方法！"
echo ""
echo "✅ 修复脚本执行完成！"
echo "请按照上述步骤更新Authing控制台配置。" 