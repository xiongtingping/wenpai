/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const CustomerRequestEntity$inboundSchema = z.object({
    id: z.string().optional(),
    email: z.string().optional(),
});
/** @internal */
export const CustomerRequestEntity$outboundSchema = z.object({
    id: z.string().optional(),
    email: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CustomerRequestEntity$;
(function (CustomerRequestEntity$) {
    /** @deprecated use `CustomerRequestEntity$inboundSchema` instead. */
    CustomerRequestEntity$.inboundSchema = CustomerRequestEntity$inboundSchema;
    /** @deprecated use `CustomerRequestEntity$outboundSchema` instead. */
    CustomerRequestEntity$.outboundSchema = CustomerRequestEntity$outboundSchema;
})(CustomerRequestEntity$ || (CustomerRequestEntity$ = {}));
export function customerRequestEntityToJSON(customerRequestEntity) {
    return JSON.stringify(CustomerRequestEntity$outboundSchema.parse(customerRequestEntity));
}
export function customerRequestEntityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CustomerRequestEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CustomerRequestEntity' from JSON`);
}
//# sourceMappingURL=customerrequestentity.js.map