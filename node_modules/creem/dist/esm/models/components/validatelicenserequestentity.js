/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const ValidateLicenseRequestEntity$inboundSchema = z.object({
    key: z.string(),
    instance_id: z.string(),
}).transform((v) => {
    return remap$(v, {
        "instance_id": "instanceId",
    });
});
/** @internal */
export const ValidateLicenseRequestEntity$outboundSchema = z.object({
    key: z.string(),
    instanceId: z.string(),
}).transform((v) => {
    return remap$(v, {
        instanceId: "instance_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var ValidateLicenseRequestEntity$;
(function (ValidateLicenseRequestEntity$) {
    /** @deprecated use `ValidateLicenseRequestEntity$inboundSchema` instead. */
    ValidateLicenseRequestEntity$.inboundSchema = ValidateLicenseRequestEntity$inboundSchema;
    /** @deprecated use `ValidateLicenseRequestEntity$outboundSchema` instead. */
    ValidateLicenseRequestEntity$.outboundSchema = ValidateLicenseRequestEntity$outboundSchema;
})(ValidateLicenseRequestEntity$ || (ValidateLicenseRequestEntity$ = {}));
export function validateLicenseRequestEntityToJSON(validateLicenseRequestEntity) {
    return JSON.stringify(ValidateLicenseRequestEntity$outboundSchema.parse(validateLicenseRequestEntity));
}
export function validateLicenseRequestEntityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => ValidateLicenseRequestEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'ValidateLicenseRequestEntity' from JSON`);
}
//# sourceMappingURL=validatelicenserequestentity.js.map