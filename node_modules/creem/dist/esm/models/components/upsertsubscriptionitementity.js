/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const UpsertSubscriptionItemEntity$inboundSchema = z.object({
    id: z.string().optional(),
    product_id: z.string().optional(),
    price_id: z.string().optional(),
    units: z.number().optional(),
}).transform((v) => {
    return remap$(v, {
        "product_id": "productId",
        "price_id": "priceId",
    });
});
/** @internal */
export const UpsertSubscriptionItemEntity$outboundSchema = z.object({
    id: z.string().optional(),
    productId: z.string().optional(),
    priceId: z.string().optional(),
    units: z.number().optional(),
}).transform((v) => {
    return remap$(v, {
        productId: "product_id",
        priceId: "price_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UpsertSubscriptionItemEntity$;
(function (UpsertSubscriptionItemEntity$) {
    /** @deprecated use `UpsertSubscriptionItemEntity$inboundSchema` instead. */
    UpsertSubscriptionItemEntity$.inboundSchema = UpsertSubscriptionItemEntity$inboundSchema;
    /** @deprecated use `UpsertSubscriptionItemEntity$outboundSchema` instead. */
    UpsertSubscriptionItemEntity$.outboundSchema = UpsertSubscriptionItemEntity$outboundSchema;
})(UpsertSubscriptionItemEntity$ || (UpsertSubscriptionItemEntity$ = {}));
export function upsertSubscriptionItemEntityToJSON(upsertSubscriptionItemEntity) {
    return JSON.stringify(UpsertSubscriptionItemEntity$outboundSchema.parse(upsertSubscriptionItemEntity));
}
export function upsertSubscriptionItemEntityFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UpsertSubscriptionItemEntity$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UpsertSubscriptionItemEntity' from JSON`);
}
//# sourceMappingURL=upsertsubscriptionitementity.js.map