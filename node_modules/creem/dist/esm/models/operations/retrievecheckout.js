/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RetrieveCheckoutRequest$inboundSchema = z.object({
    checkout_id: z.string(),
    "x-api-key": z.string(),
}).transform((v) => {
    return remap$(v, {
        "checkout_id": "checkoutId",
        "x-api-key": "xApiKey",
    });
});
/** @internal */
export const RetrieveCheckoutRequest$outboundSchema = z.object({
    checkoutId: z.string(),
    xApiKey: z.string(),
}).transform((v) => {
    return remap$(v, {
        checkoutId: "checkout_id",
        xApiKey: "x-api-key",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveCheckoutRequest$;
(function (RetrieveCheckoutRequest$) {
    /** @deprecated use `RetrieveCheckoutRequest$inboundSchema` instead. */
    RetrieveCheckoutRequest$.inboundSchema = RetrieveCheckoutRequest$inboundSchema;
    /** @deprecated use `RetrieveCheckoutRequest$outboundSchema` instead. */
    RetrieveCheckoutRequest$.outboundSchema = RetrieveCheckoutRequest$outboundSchema;
})(RetrieveCheckoutRequest$ || (RetrieveCheckoutRequest$ = {}));
export function retrieveCheckoutRequestToJSON(retrieveCheckoutRequest) {
    return JSON.stringify(RetrieveCheckoutRequest$outboundSchema.parse(retrieveCheckoutRequest));
}
export function retrieveCheckoutRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RetrieveCheckoutRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RetrieveCheckoutRequest' from JSON`);
}
//# sourceMappingURL=retrievecheckout.js.map