/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RetrieveProductRequest$inboundSchema = z.object({
    product_id: z.string(),
    "x-api-key": z.string(),
}).transform((v) => {
    return remap$(v, {
        "product_id": "productId",
        "x-api-key": "xApiKey",
    });
});
/** @internal */
export const RetrieveProductRequest$outboundSchema = z.object({
    productId: z.string(),
    xApiKey: z.string(),
}).transform((v) => {
    return remap$(v, {
        productId: "product_id",
        xApiKey: "x-api-key",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveProductRequest$;
(function (RetrieveProductRequest$) {
    /** @deprecated use `RetrieveProductRequest$inboundSchema` instead. */
    RetrieveProductRequest$.inboundSchema = RetrieveProductRequest$inboundSchema;
    /** @deprecated use `RetrieveProductRequest$outboundSchema` instead. */
    RetrieveProductRequest$.outboundSchema = RetrieveProductRequest$outboundSchema;
})(RetrieveProductRequest$ || (RetrieveProductRequest$ = {}));
export function retrieveProductRequestToJSON(retrieveProductRequest) {
    return JSON.stringify(RetrieveProductRequest$outboundSchema.parse(retrieveProductRequest));
}
export function retrieveProductRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RetrieveProductRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RetrieveProductRequest' from JSON`);
}
//# sourceMappingURL=retrieveproduct.js.map