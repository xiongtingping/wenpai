/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import * as components from "../components/index.js";
/** @internal */
export const CreateProductRequest$inboundSchema = z.object({
    "x-api-key": z.string(),
    CreateProductRequestEntity: components.CreateProductRequestEntity$inboundSchema,
}).transform((v) => {
    return remap$(v, {
        "x-api-key": "xApiKey",
        "CreateProductRequestEntity": "createProductRequestEntity",
    });
});
/** @internal */
export const CreateProductRequest$outboundSchema = z.object({
    xApiKey: z.string(),
    createProductRequestEntity: components.CreateProductRequestEntity$outboundSchema,
}).transform((v) => {
    return remap$(v, {
        xApiKey: "x-api-key",
        createProductRequestEntity: "CreateProductRequestEntity",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var CreateProductRequest$;
(function (CreateProductRequest$) {
    /** @deprecated use `CreateProductRequest$inboundSchema` instead. */
    CreateProductRequest$.inboundSchema = CreateProductRequest$inboundSchema;
    /** @deprecated use `CreateProductRequest$outboundSchema` instead. */
    CreateProductRequest$.outboundSchema = CreateProductRequest$outboundSchema;
})(CreateProductRequest$ || (CreateProductRequest$ = {}));
export function createProductRequestToJSON(createProductRequest) {
    return JSON.stringify(CreateProductRequest$outboundSchema.parse(createProductRequest));
}
export function createProductRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => CreateProductRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'CreateProductRequest' from JSON`);
}
//# sourceMappingURL=createproduct.js.map