/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
/** @internal */
export const RetrieveSubscriptionRequest$inboundSchema = z.object({
    subscription_id: z.string(),
    "x-api-key": z.string(),
}).transform((v) => {
    return remap$(v, {
        "subscription_id": "subscriptionId",
        "x-api-key": "xApiKey",
    });
});
/** @internal */
export const RetrieveSubscriptionRequest$outboundSchema = z.object({
    subscriptionId: z.string(),
    xApiKey: z.string(),
}).transform((v) => {
    return remap$(v, {
        subscriptionId: "subscription_id",
        xApiKey: "x-api-key",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var RetrieveSubscriptionRequest$;
(function (RetrieveSubscriptionRequest$) {
    /** @deprecated use `RetrieveSubscriptionRequest$inboundSchema` instead. */
    RetrieveSubscriptionRequest$.inboundSchema = RetrieveSubscriptionRequest$inboundSchema;
    /** @deprecated use `RetrieveSubscriptionRequest$outboundSchema` instead. */
    RetrieveSubscriptionRequest$.outboundSchema = RetrieveSubscriptionRequest$outboundSchema;
})(RetrieveSubscriptionRequest$ || (RetrieveSubscriptionRequest$ = {}));
export function retrieveSubscriptionRequestToJSON(retrieveSubscriptionRequest) {
    return JSON.stringify(RetrieveSubscriptionRequest$outboundSchema.parse(retrieveSubscriptionRequest));
}
export function retrieveSubscriptionRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => RetrieveSubscriptionRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'RetrieveSubscriptionRequest' from JSON`);
}
//# sourceMappingURL=retrievesubscription.js.map