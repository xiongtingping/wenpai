/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateCustomerPortalLinkRequestEntity = {
  /**
   * Unique identifier of the customer.
   */
  customerId: string;
};

/** @internal */
export const CreateCustomerPortalLinkRequestEntity$inboundSchema: z.ZodType<
  CreateCustomerPortalLinkRequestEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  customer_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "customer_id": "customerId",
  });
});

/** @internal */
export type CreateCustomerPortalLinkRequestEntity$Outbound = {
  customer_id: string;
};

/** @internal */
export const CreateCustomerPortalLinkRequestEntity$outboundSchema: z.ZodType<
  CreateCustomerPortalLinkRequestEntity$Outbound,
  z.ZodTypeDef,
  CreateCustomerPortalLinkRequestEntity
> = z.object({
  customerId: z.string(),
}).transform((v) => {
  return remap$(v, {
    customerId: "customer_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomerPortalLinkRequestEntity$ {
  /** @deprecated use `CreateCustomerPortalLinkRequestEntity$inboundSchema` instead. */
  export const inboundSchema =
    CreateCustomerPortalLinkRequestEntity$inboundSchema;
  /** @deprecated use `CreateCustomerPortalLinkRequestEntity$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomerPortalLinkRequestEntity$outboundSchema;
  /** @deprecated use `CreateCustomerPortalLinkRequestEntity$Outbound` instead. */
  export type Outbound = CreateCustomerPortalLinkRequestEntity$Outbound;
}

export function createCustomerPortalLinkRequestEntityToJSON(
  createCustomerPortalLinkRequestEntity: CreateCustomerPortalLinkRequestEntity,
): string {
  return JSON.stringify(
    CreateCustomerPortalLinkRequestEntity$outboundSchema.parse(
      createCustomerPortalLinkRequestEntity,
    ),
  );
}

export function createCustomerPortalLinkRequestEntityFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomerPortalLinkRequestEntity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomerPortalLinkRequestEntity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomerPortalLinkRequestEntity' from JSON`,
  );
}
