/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RetrieveDiscountRequest = {
  /**
   * The unique identifier of the discount (provide either discount_id OR discount_code)
   */
  discountId?: string | undefined;
  /**
   * The unique discount code (provide either discount_id OR discount_code)
   */
  discountCode?: string | undefined;
  xApiKey: string;
};

/** @internal */
export const RetrieveDiscountRequest$inboundSchema: z.ZodType<
  RetrieveDiscountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  discount_id: z.string().optional(),
  discount_code: z.string().optional(),
  "x-api-key": z.string(),
}).transform((v) => {
  return remap$(v, {
    "discount_id": "discountId",
    "discount_code": "discountCode",
    "x-api-key": "xApiKey",
  });
});

/** @internal */
export type RetrieveDiscountRequest$Outbound = {
  discount_id?: string | undefined;
  discount_code?: string | undefined;
  "x-api-key": string;
};

/** @internal */
export const RetrieveDiscountRequest$outboundSchema: z.ZodType<
  RetrieveDiscountRequest$Outbound,
  z.ZodTypeDef,
  RetrieveDiscountRequest
> = z.object({
  discountId: z.string().optional(),
  discountCode: z.string().optional(),
  xApiKey: z.string(),
}).transform((v) => {
  return remap$(v, {
    discountId: "discount_id",
    discountCode: "discount_code",
    xApiKey: "x-api-key",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveDiscountRequest$ {
  /** @deprecated use `RetrieveDiscountRequest$inboundSchema` instead. */
  export const inboundSchema = RetrieveDiscountRequest$inboundSchema;
  /** @deprecated use `RetrieveDiscountRequest$outboundSchema` instead. */
  export const outboundSchema = RetrieveDiscountRequest$outboundSchema;
  /** @deprecated use `RetrieveDiscountRequest$Outbound` instead. */
  export type Outbound = RetrieveDiscountRequest$Outbound;
}

export function retrieveDiscountRequestToJSON(
  retrieveDiscountRequest: RetrieveDiscountRequest,
): string {
  return JSON.stringify(
    RetrieveDiscountRequest$outboundSchema.parse(retrieveDiscountRequest),
  );
}

export function retrieveDiscountRequestFromJSON(
  jsonString: string,
): SafeParseResult<RetrieveDiscountRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RetrieveDiscountRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RetrieveDiscountRequest' from JSON`,
  );
}
