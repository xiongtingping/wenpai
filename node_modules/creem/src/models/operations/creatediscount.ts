/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateDiscountRequest = {
  xApiKey: string;
  createDiscountRequestEntity: components.CreateDiscountRequestEntity;
};

/** @internal */
export const CreateDiscountRequest$inboundSchema: z.ZodType<
  CreateDiscountRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "x-api-key": z.string(),
  CreateDiscountRequestEntity:
    components.CreateDiscountRequestEntity$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "x-api-key": "xApiKey",
    "CreateDiscountRequestEntity": "createDiscountRequestEntity",
  });
});

/** @internal */
export type CreateDiscountRequest$Outbound = {
  "x-api-key": string;
  CreateDiscountRequestEntity: components.CreateDiscountRequestEntity$Outbound;
};

/** @internal */
export const CreateDiscountRequest$outboundSchema: z.ZodType<
  CreateDiscountRequest$Outbound,
  z.ZodTypeDef,
  CreateDiscountRequest
> = z.object({
  xApiKey: z.string(),
  createDiscountRequestEntity:
    components.CreateDiscountRequestEntity$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    xApiKey: "x-api-key",
    createDiscountRequestEntity: "CreateDiscountRequestEntity",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDiscountRequest$ {
  /** @deprecated use `CreateDiscountRequest$inboundSchema` instead. */
  export const inboundSchema = CreateDiscountRequest$inboundSchema;
  /** @deprecated use `CreateDiscountRequest$outboundSchema` instead. */
  export const outboundSchema = CreateDiscountRequest$outboundSchema;
  /** @deprecated use `CreateDiscountRequest$Outbound` instead. */
  export type Outbound = CreateDiscountRequest$Outbound;
}

export function createDiscountRequestToJSON(
  createDiscountRequest: CreateDiscountRequest,
): string {
  return JSON.stringify(
    CreateDiscountRequest$outboundSchema.parse(createDiscountRequest),
  );
}

export function createDiscountRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateDiscountRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDiscountRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDiscountRequest' from JSON`,
  );
}
