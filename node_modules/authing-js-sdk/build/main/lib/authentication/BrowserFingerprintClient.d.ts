import { AuthenticationClientOptions } from './types';
import { HttpClient } from '../common/HttpClient';
import { BaseAuthenticationClient } from './BaseAuthenticationClient';
import { MyDevicesList } from './types';
export declare class BrowserFingerprintClient {
    options: AuthenticationClientOptions;
    httpClient: HttpClient;
    baseClient: BaseAuthenticationClient;
    constructor(options: AuthenticationClientOptions, httpClient: HttpClient);
    /**
     *
     *获取浏览器指纹信息
     * @returns 返回浏览器的各种指纹信息
     * @memberof BrowserFingerprintClient
     */
    getBrowserFingers(): Promise<{
        browserId: string;
        deviceFingers: import("../../types").FingerObjType;
    }>;
    /**
     * 获取设备信息，汇总指纹及Navigator上的信息
     * @returns 返回带有设备信息的Promise
     */
    getDeviceInfo(): Promise<{
        browserId: string;
        deviceFingers: import("../../types").FingerObjType;
    }>;
    /**
     * 上报设备信息
     * @returns
     */
    createDevice(): Promise<boolean>;
    /**
     * 用户中心 - 列表
     * @returns {Promise<MyDevicesList[]>}
     */
    myDevicesList(): Promise<MyDevicesList[]>;
    /**
     * 用户中心 - 移除设备
     * @param deviceId
     * @returns {Promise<boolean>}
     */
    myDevicesUnbind(deviceId: string): Promise<boolean>;
    /**
     * 用户中心 - 登出设备
     * @param deviceId
     * @returns {Promise<boolean>}
     */
    myDevicesLogout(deviceId: string): Promise<boolean>;
}
