import { AuthenticationTokenProvider } from './AuthenticationTokenProvider';
import { AuthenticationClientOptions } from './types';
import { HttpClient } from '../common/HttpClient';
import { BaseAuthenticationClient } from './BaseAuthenticationClient';
/**
 * @class EventAuthenticationClient 认证侧事件发布订阅模块
 * @description 认证侧事件发布订阅模块
 * @name EventAuthenticationClient
 */
export declare class EventAuthenticationClient {
    options: AuthenticationClientOptions;
    tokenProvider: AuthenticationTokenProvider;
    httpClient: HttpClient;
    baseClient: BaseAuthenticationClient;
    private wsMap;
    private eventBus;
    constructor(options: AuthenticationClientOptions, tokenProvider: AuthenticationTokenProvider, httpClient: HttpClient);
    private reconnect;
    private initWebSocket;
    sub(eventName: string, callback: Function, errCallback: Function): void;
    /**
     * @summary 事件发布
     * @description 客户调用发布事件到事件中心
     * @returns
     */
    pub(eventName: string, data: string): Promise<any>;
}
