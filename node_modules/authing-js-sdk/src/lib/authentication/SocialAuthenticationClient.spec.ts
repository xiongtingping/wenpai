import {
  generateRandomEmail,
  generateRandomString,
  getOptionsFromEnv
} from '../testing-helper';
import test from 'ava';
import { AuthenticationClient } from './AuthenticationClient';
const options = getOptionsFromEnv();
const authenticationClient = new AuthenticationClient(options);

test.only('生成绑定外部身份源的链接', async t => {
    const password = generateRandomString(14);
    const email = generateRandomEmail().toLocaleLowerCase();
    await authenticationClient.registerByEmail(email, password);
    const user = await authenticationClient.loginByEmail(email, password);
    const result = await authenticationClient.social.generateLinkExtIdpUrl({
        extIdpConnIdentifier: '11',
        idToken: user.token
    });
    t.assert(result.url !== undefined);
  });
  

test('获取身份源列表', async t => {
  const password = generateRandomString(14);
  const email = generateRandomEmail().toLocaleLowerCase();
  await authenticationClient.registerByEmail(email, password);
  await authenticationClient.loginByEmail(email, password);
  const result = await authenticationClient.social.getIdentities();
  t.assert(Array.isArray(result));
  t.assert(result.length === 0);
});
