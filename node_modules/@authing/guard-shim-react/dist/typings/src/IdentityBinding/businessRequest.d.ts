export declare enum IdentityBindingBusinessAction {
    PhoneCode = "phone-code",
    EmailCode = "emial-code",
    Password = "password"
}
export interface PhoneCodeParams {
    phone: string;
    code: string;
    phoneCountryCode?: string;
}
export interface EmailCodeParams {
    email: string;
    code: string;
}
export interface PasswordParams {
    account: string;
    password: string;
    captchaCode: string;
}
export declare enum IdentityBindingAction {
    CreateUser = "create-federation-account",
    BindByPassword = "bind-identity-by-password",
    BindByPhoneCode = "bind-identity-by-phone-code",
    BindByEmailCode = "bind-identity-by-email-code",
    RegisterByPassword = "register-bind-by-password",
    RegisterByPhoneCode = "register-bind-by-phone-code",
    RegisterByEmailCode = "register-bind-by-email-code"
}
export declare const PhoneCode: (params: PhoneCodeParams) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
export declare const EmailCode: (params: EmailCodeParams) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
export declare const Password: (params: PasswordParams) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
export declare const useIdentityBindingBusinessRequest: (type?: 'register' | 'bind') => {
    "phone-code": (params: PhoneCodeParams) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
    "emial-code": (params: EmailCodeParams) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
    password: (params: PasswordParams) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
};
